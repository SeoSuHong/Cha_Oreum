<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chaOreum.dao.contents.ContentsDao">

  <select id="getView" resultType="com.chaOreum.entity.PostView">
  	SELECT MC.name mainCategory, SC.name subCategory, M.nickname, P.*, (SELECT COUNT(*) FROM view WHERE post_no = P.no) view, (SELECT count(*) FROM hot WHERE post_no = P.no) hot FROM post P 
		JOIN subCategory SC ON SC.no = P.subCategory_no 
		JOIN mainCategory MC ON MC.no = SC.mainCategory_no
		JOIN member M ON M.id = P.member_id
			WHERE P.no = #{no}
  </select>

  <select id="getViewList" resultType="com.chaOreum.entity.PostView">
  	SELECT MC.name mainCategory, SC.name subCategory, M.nickname, P.*, (SELECT COUNT(*) FROM view WHERE post_no = P.no) view, (SELECT count(*) FROM hot WHERE post_no = P.no) hot FROM post P 
		JOIN subCategory SC ON SC.no = P.subCategory_no 
		JOIN mainCategory MC ON MC.no = SC.mainCategory_no
		JOIN member M ON M.id = P.member_id
			<where>
				<if test="category_no != 0">
					P.subCategory_no = #{category_no}
				</if>
				<if test="nickname != null and nickname != ''">
					AND M.nickname LIKE '%${nickname}%'
				</if>
				<if test="title != null and title != ''"> 
					AND P.title LIKE '%${title}%'
				</if>
			</where>
			<if test="sort == 'new' or sort == null and sort == ''">
	        	ORDER BY P.regDate DESC
	        </if>
	        <if test="sort == 'hot'">
	        	ORDER BY hot DESC
	        </if>
	        <if test="sort == 'look'">
	        	ORDER BY view DESC
	        </if> 
	        LIMIT #{offset}, #{size};
  </select>
  
  <insert id="insertPost" parameterType="com.chaOreum.entity.Post">
  	INSERT INTO post VALUES(DEFAULT, #{member_id}, #{subCategory_no}, #{title}, #{contents}, DEFAULT, #{fileName}, #{fileSize})
  </insert>
  
  <update id="updatePost" parameterType="com.chaOreum.entity.Post">
  	UPDATE post 
  	SET subCategory_no = #{subCategory_no}, title = #{title}, contents = #{contents}, fileName = #{fileName}, fileSize = #{fileSize}
  		WHERE no = #{no}
  </update>
  
  <delete id="deletePost">
  	DELETE FROM post WHERE no = #{no}
  </delete>
  
  <insert id="setViewCount">
  	INSERT INTO view 
  		SELECT #{clientIPAddress}, #{no} FROM DUAL 
  		WHERE NOT EXISTS(SELECT * FROM view WHERE ip = #{clientIPAddress} AND post_no = #{no})
  </insert>
  
  <select id="likeCount" resultType="int">
  	SELECT COUNT(*) FROM hot WHERE post_no = #{no} AND member_id = #{id};
  </select>
  
  <insert id="insertHot">
  	INSERT INTO hot VALUES(DEFAULT, #{id}, #{no});
  </insert>
  
  <delete id="deleteHot">
  	DELETE FROM hot WHERE member_id = #{id} AND post_no = #{no};
  </delete>
  
  <select id="getComments" resultType="com.chaOreum.entity.Comment">
  	SELECT * FROM comment WHERE post_no = #{no} ORDER BY regDate DESC;
  </select>
  
  <select id="getReplies" resultType="com.chaOreum.entity.Reply">
  	SELECT * FROM reply R 
  		JOIN comment C ON C.no = R.comment_no
  			WHERE C.post_no = #{no}
  			ORDER BY R.regDate DESC;
  </select>
  
  <insert id="insertComment">
  	INSERT INTO comment VALUES(DEFAULT, #{no}, #{nickname}, #{contents}, DEFAULT, #{comment_secret});
  </insert>
  
  <insert id="insertReply">
  	INSERT INTO reply VALUES(DEFAULT, #{no}, #{nickname}, #{contents}, DEFAULT, #{reply_secret});
  </insert>
  
  <delete id="deleteComment">
  	DELETE FROM comment WHERE no = #{no};
  </delete>
  
  <delete id="deleteReplies">
  	DELETE FROM reply WHERE comment_no = #{no};
  </delete>
  
  <delete id="deleteReply">
  	DELETE FROM reply WHERE no = #{no};
  </delete>
  
  <select id="getEndPage" resultType="int">
  	SELECT COUNT(*) FROM post P
  	JOIN member M ON M.id = P.member_id
  		<where>
			<if test="category_no != 0">
				subCategory_no = #{category_no}
			</if>
			<if test="nickname != null and nickname != ''">
				AND M.nickname LIKE '%${nickname}%'
			</if>
			<if test="title != null and title != ''"> 
				AND title LIKE '%${title}%'
			</if>
		</where>
  </select>
  
</mapper>